name: Build qt Bottle for macOS 12 (patch official formula)

on:
  schedule:
    - cron: '0 3 * * 1'   # 每周一 UTC 03:00
  workflow_dispatch:

jobs:
  build-macos-bottle:
    runs-on: macos-14
    env:
      HOMEBREW_DEVELOPER: "1"
    steps:
      - name: Checkout repo (for scripts/patches)
        uses: actions/checkout@v4

      # 缓存 Homebrew 的下载
      - name: Cache Homebrew downloads
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/Homebrew
            ~/Library/Caches/Homebrew/downloads
          key: brew-cache-${{ runner.os }}-${{ hashFiles('patches/*.patch') }}
          restore-keys: |
            brew-cache-${{ runner.os }}-

      # # 缓存 ccache
      # - name: Cache ccache
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.ccache
      #     key: ccache-${{ runner.os }}-${{ hashFiles('patches/*.patch') }}
      #     restore-keys: |
      #       ccache-${{ runner.os }}-

      - name: Prepare and build bottle (patch formula & bottle)
        run: |
          set -euxo pipefail

          FORMULA=qt
          RBFILE="${FORMULA}.rb"
          WORKDIR="$GITHUB_WORKSPACE/build"
          ARTDIR="$GITHUB_WORKSPACE/artifacts"
          mkdir -p "$WORKDIR" "$ARTDIR"
          cd "$WORKDIR"

          # libpng version mismatch issue, https://stackoverflow.com/questions/36523911#answer-68936263
          curl -kOs https://gist.githubusercontent.com/nicerobot/1515915/raw/uninstall-mono.sh
          chmod +x ./uninstall-mono.sh
          ./uninstall-mono.sh

          curl -fsSLO "https://raw.githubusercontent.com/Homebrew/homebrew-core/main/Formula/${FORMULA:0:1}/${RBFILE}"

          cp "$GITHUB_WORKSPACE/patches/${FORMULA}.patch" .
          patch "${RBFILE}" < "${FORMULA}.patch"

          # # 安装 ccache 并配置 Homebrew 使用它
          # brew install ccache
          # export HOMEBREW_CC="ccache clang"
          # export HOMEBREW_CXX="ccache clang++"

          brew uninstall --ignore-dependencies cmake

          brew install --build-bottle "./${RBFILE}"

          # 生成 bottle 文件
          brew bottle "${FORMULA}" --skip-relocation

          # 把 bottle 移到 artifacts 目录
          mv ./*.tar.gz "$ARTDIR/"

      - name: Upload bottle artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.repository }}-macos-bottle
          path: artifacts/*.tar.gz

      - name: Create/Update GitHub Release 'nightly' and attach bottle
        if: always()
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly
          name: Nightly bottle
          files: artifacts/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}